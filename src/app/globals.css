/* app/globals.css */

/* 1. Import Google Fonts at the very top */
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Playfair+Display:wght@700;900&display=swap');

/* 2. Include Tailwind's base, components, and utilities */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* 3. Define all base layer customizations in a single block */
@layer base {
  /* Define the HSL color variables for our vintage theme */
  :root {
    --background: 26 56% 95%; /* #F8F0E9 */
    --foreground: 0 0% 23%;   /* #3A3A3A */

    --card: 0 0% 100%;
    --card-foreground: 0 0% 23%;

    --primary: 354 57% 46%; /* #B9313E - Marrow Red */
    --primary-foreground: 0 0% 100%;

    --secondary: 0 0% 42%;
    --secondary-foreground: 0 0% 100%;

    /* Themed colors for alerts and statuses */
    --destructive: 1 42% 46%;   /* Muted Red */
    --warning: 42 39% 38%;      /* Muted Yellow/Brown */
    --success: 121 39% 36%;     /* Muted Green */
    
    --muted: 26 29% 91%; /* #EAE0D9 - A slightly darker parchment for backgrounds */
    --muted-foreground: 0 0% 42%;

    --accent: 356 52% 36%; /* #8C2B32 - A darker red for headings */
    --accent-foreground: 0 0% 100%;

    --border: 26 29% 85%;
    --input: 26 29% 85%;
    --ring: 354 57% 46%;

    --radius: 0.5rem;
  }

  /* Apply base styles */
  * {
    /* FIX: Instead of using '@apply border-border', we set the border-color directly.
      This avoids a common build-time issue where the 'border-border' class isn't 
      available when this global rule is being processed.
    */
    border-color: hsl(var(--border));
  }

  body {
    @apply bg-background text-foreground font-sans;
    /* This adds the subtle noise texture to the background for a vintage paper feel */
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80" width="80" height="80"><g fill="%23d3c7be" fill-opacity="0.2"><path d="M0 0h80v80H0zM20 20h40v40H20z"/></g></svg>');
  }

  /* Set the default heading font to the vintage serif style */
  h1, h2, h3, h4, h5, h6 {
    @apply font-serif text-accent;
  }
}

/* 4. Define custom component styles and utilities */
@layer components {
  /* Risk badges using the new theme colors */
  .risk-low {
    @apply bg-success/10 text-success border-success/20;
  }
  .risk-medium {
    @apply bg-warning/10 text-warning border-warning/20;
  }
  .risk-high {
    @apply bg-destructive/10 text-destructive border-destructive/20;
  }

  /* A styled tooltip that fits the theme */
  .chart-tooltip {
    @apply bg-card border border-border rounded-lg shadow-lg p-3 text-sm text-card-foreground;
  }

  .file-upload-area {
    @apply transition-all duration-300;
  }

  .file-upload-area:hover {
    @apply border-primary/50 bg-primary/5;
  }
  
  .file-upload-area.drag-active {
    @apply border-primary bg-primary/10;
  }

  .modal-backdrop {
    backdrop-filter: blur(4px);
    background-color: hsl(var(--background) / 0.6);
  }

  /* Custom scrollbar to match the muted theme */
  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }
  .custom-scrollbar::-webkit-scrollbar-track {
    background: hsl(var(--muted));
  }
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: hsl(var(--secondary) / 0.5);
    border-radius: 4px;
  }
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--secondary) / 0.7);
  }
}

/* 5. Keep necessary animations */
@layer utilities {
  .animate-fade-in {
    animation: fadeIn 0.5s ease-in-out;
  }

  .animate-slide-up {
    animation: slideUp 0.3s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideUp {
    from { transform: translateY(10px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
}
